

/**************
 * Tree Views *
 **************/
GtkTreeView.view {
  -GtkTreeView-grid-line-width: 0;
  -GtkTreeView-grid-line-pattern: '';
  -GtkTreeView-tree-line-width: 1;
  -GtkTreeView-tree-line-pattern: '';
  -GtkTreeView-expander-size: 16;

  border-left-color: border_color(); // this is actually the tree lines color,
  border-top-color: transparent;                    // while this is the grid lines color, better then nothing

  &:selected { border-radius: 0; } // rest border radius in lists

  &:selected  {
    background-color: selection_color(bg);
    border-left-color: selection_color(fg);
    border-top-color: selection_color(fg); // doesn't work unfortunatelly
  }
  &:backdrop:selected {
    background-color: selection_color(backdrop_bg);
    border-left-color: selection_color(backdrop_fg);
    border-top-color: selection_color(backdrop_fg);
  }

  &:insensitive {
    color: border_color(disabled);
    &:selected {
      color: selection_color(disabled_fg);
      &:backdrop { color: selection_color(backdrop_disabled_fg); }
    }
    &:backdrop { color: border_color(backdrop_disabled); }
  }
  &.seperator {
    color: border_color();
  }
  &.separator:backdrop {
    color: border_color(backdrop);
  }

  &:backdrop {
    border-left-color: border_color(backdrop);
  }

  &.dnd {
    border-style: solid none;
    border-width: 1px;
    border-color: button_color(hover);
  }

  &.expander {
    -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
    color: view_color(fg);
    &:dir(rtl) { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl');}
    &:hover { color: button_color(hover); }
    &:selected { color: selection_color(fg); }
    &:checked {
       -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
      &:selected { color: selection_color(fg); }
      &:backdrop { color: view_color(backdrop_fg); }
    }
    &:backdrop { color: view_color(backdrop_fg); }
  }
}

column-header {
  .button {
    @extend %column_header_button;
    color: button_color(fg);
    background-color: button_color(bg_color);
    text-shadow: none;
    box-shadow: none;
    &:hover {
      @extend %column_header_button;
      color: button_color(fg);
      background-color: gtkalpha(button_color(hover), 0.5);
      box-shadow: none;
      transition: none; //I shouldn't need this
    }
    &:active {
      @extend %column_header_button;
      color: button_color(fg);
      background-color: gtkalpha(button_color(hover), 0.5);
      transition: none; //I shouldn't need this
    }
    &.dnd {
      @extend column-header.button.dnd;
    }
  }
  &:last-child .button,
  &:last-child .button:backdrop, // set :backdrop too or the border will be visibile there
  &:last-child.button,
  &:last-child.button:backdrop { //treeview-like derived widgets in Banshee and Evolution
    border-right-style: none;
  }
}

column-header.button.dnd { // for treeview-like derive widgets
  transition: none;
  color: selection_color(bg);
  box-shadow: none;
  &:active { @extend column-header.button.dnd; }
  &:selected { @extend column-header.button.dnd; }
  &:hover { @extend column-header.button.dnd; }
}

%column_header_button {
  padding: 6px;
  border-style: none solid solid none;
  border-radius: 0;
  background-image: none;
  border-color: border_color();
  text-shadow: none;
  &:insensitive {
    border-color: border_color(disabled);
    color: button_color(disabled_fg);
    background-color: button_color(disabled_bg_color);
    background-image: none;
  }
  &:backdrop {
    border-color: border_color(backdrop);
    border-style: none solid solid none;
    color: button_color(backdrop_fg);
    background-image: none;
    background-color: button_color(backdrop_bg_color);
    &:insensitive {
      border-color: border_color(disabled);
      color: button_color(disabled_fg);
      background-color: button_color(disabled_bg_color);
      background-image: none;
    }
  }
}
