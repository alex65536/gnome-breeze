@mixin entry($t, $fc:view_color(active)) {
//
// Entries drawing function
//
// $t: entry type
// $fc: focus color
// $edge: set to none to not draw the bottom edge or specify a color to not
//        use the default one
//
// possible $t values:
// normal, focus, insensitive, backdrop, backdrop-insensitive, osd, osd-focus, osd-backdrop;
//
  @if $t==normal {
    color: view_color(fg);
    border-color: border_color();
    background-color: view_color(bg);
    box-shadow: none;
  }

  @if $t==focus {
    border-color: $fc;
  }

  @if $t==insensitive {
    color: view_color(disabled_fg);
    border-color: border_color(disabled);
    background-color: view_color(disabled_bg);
  }

  @if $t==backdrop {
    color: view_color(backdrop_fg);
    border-color: border_color(backdrop);
    background-color: view_color(backdrop_bg);
  }

  @if $t==backdrop-insensitive {
    color: view_color(backdrop_disabled_fg);
    border-color: border_color(backdrop_disabled);
    background-color: view_color(backdrop_disabled_bg);
  }
}

/****************
 * Text Entries *
 ****************/

%entry,
entry {
    %entry_basic, & {
      min-height: 30px;
      padding-left: 8px;
      padding-right: 8px;
      border: 1px solid;
      border-radius: $r;
      transition: all 200ms $ease-out-quad;

      @include entry(normal);

      image { // icons inside the entry
        &.left { padding-left: 0; padding-right: 6px; }
        &.right { padding-left: 6px; padding-right: 0; }
      }
      // FIXME
      // undershoot {
      // &.left { @include undershoot(left); }
      // &.right { @include undershoot(right); }
      // }

      &.flat {
        &:focus, & {
          min-height: 0;
          padding: 2px;
          @include entry(normal);
        }
      }
      &:focus { @include entry(focus); }
      &:disabled { @include entry(insensitive); }
      &:backdrop { @include entry(backdrop); }
      &:backdrop:disabled { @include entry(backdrop-insensitive); }

      selection { &:focus, & { @extend %selected_items; }}

      @each $e_type, $e_color in (error, other_colors(error)),
                                 (warning, other_colors(warning)) {
        &.#{$e_type} {
          color: $e_color;
          border-color: $e_color;
          background-color: gtkalpha($e_color, 0.5);
          &:focus {
            @include entry(focus, $e_color);
            background-color: gtkalpha($e_color, 0.5);
          }
          &:selected, &:selected:focus { background-color: $e_color; }
        }
      }

      image { // entry icons colors
        color: view_color(fg);
        &:hover { color: view_color(hover); }
        &:active { color: view_color(active); }
        &:backdrop { color: view_color(backdrop_fg); }
      }
    //   FIXME
    //   &:drop(active) {
    //   &:focus, & {
    //     border-color: $drop_target_color;
    //     box-shadow: inset 0 0 0 1px $drop_target_color;
    //   }
    // }
    }

  progress {
    margin: 1px;
    border-radius: 0;
    border-width: 0 0 2px;
    border-color: selection_color(bg);
    border-style: solid;
    background-image: none;
    background-color: transparent;
    box-shadow: none;
    &:backdrop {
      background-color: transparent;
      border-color: selection_color(backdrop_bg);
    }
  }
}

treeview acceleditor > label {
    background-color: selection_color(bg);
}

treeview entry {
  &.flat, & {
    border-radius: 0;
    background-image: none;
    background-color: view_color(bg);

    &:focus { border-color: view_color(active); }
  }
}
